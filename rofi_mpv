#!/usr/bin/env bash

# Import Current Theme
DIR="$HOME/.config/bspwm"
STYLE="adaptive"
RASI="$DIR/themes/$STYLE/rofi/music.rasi"

# Theme Elements
status="`mpv-ipc status`"
if [[ -z "$status" ]]; then
	prompt='Offline'
	mesg="MPV is Offline"
else
	prompt="`mpv-ipc -f "%{media-title}" current`"
	mesg="`mpv-ipc -f "%{media-title}" current` :: `mpv-ipc status | grep "#" | awk '{print $3}'`"
fi

# Options
layout=`cat ${RASI} | grep 'USE_ICON' | cut -d'=' -f2`
if [[ "$layout" == 'NO' ]]; then
	if [[ ${status} == *"[playing]"* ]]; then
		option_1=" Pause"
	else
		option_1=" Play"
	fi
	option_2=" Stop"
	option_3=" Previous"
	option_4=" Next"
	option_5=" Repeat"
	option_6=" Random"
else
	if [[ ${status} == *"[playing]"* ]]; then
		option_1=""
	else
		option_1=""
	fi
	option_2=""
	option_3=""
	option_4=""
	option_5=""
	option_6=""
fi

# Toggle Actions
active=''
urgent=''
# Repeat
if [[ ${status} == *"repeat: on"* ]]; then
    active="-a 4"
elif [[ ${status} == *"repeat: off"* ]]; then
    urgent="-u 4"
else
    option_5=" Parsing Error"
fi
# Random
if [[ ${status} == *"random: on"* ]]; then
    [ -n "$active" ] && active+=",5" || active="-a 5"
elif [[ ${status} == *"random: off"* ]]; then
    [ -n "$urgent" ] && urgent+=",5" || urgent="-u 5"
else
    option_6=" Parsing Error"
fi

# Rofi CMD
rofi_cmd() {
	rofi -dmenu \
		-p "$prompt" \
		-mesg "$mesg" \
		${active} ${urgent} \
		-markup-rows \
		-theme ${RASI}
}

# Pass variables to rofi dmenu
run_rofi() {
	echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_5\n$option_6" | rofi_cmd
}

# Execute Command
run_cmd() {
	if [[ "$1" == '--opt1' ]]; then
		mpv-ipc -q toggle
	elif [[ "$1" == '--opt2' ]]; then
		mpv-ipc -q stop
	elif [[ "$1" == '--opt3' ]]; then
		mpv-ipc -q prev
	elif [[ "$1" == '--opt4' ]]; then
		mpv-ipc -q next
	elif [[ "$1" == '--opt5' ]]; then
		mpv-ipc -q repeat
  elif [[ "$1" == '--opt6' ]]; then
   mpv-ipc -q random
 fi
}

Actions
chosen="$(run_rofi)"
case ${chosen} in
$option_1)
run_cmd --opt1
;;
$option_2)
run_cmd --opt2
;;
$option_3)
run_cmd --opt3
;;
$option_4)
run_cmd --opt4
;;
$option_5)
run_cmd --opt5
;;
$option_6)
run_cmd --opt6
;;
esac
